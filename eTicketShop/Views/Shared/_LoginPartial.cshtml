@using Microsoft.AspNetCore.Identity
@using eTicketShop.Areas.Identity.Data

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="bi bi-gear"></i>  Hello @UserManager.GetUserName(User)
            </a>

            <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                <li class="nav-item">
            
                    <a class="dropdown-item" asp-controller="Orders" asp-action="Index">
                       Orders
                    </a>
                </li>
                <li class="nav-item">
                    <a id="manage" class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Profile</a>
                </li>

                 </ul>
        </li>
    
       
        <li class="navbar-nav">
            @await Component.InvokeAsync("ShoppingCartSummary")
        </li>
      

    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Events", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
